minikube installation

#curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
#sudo dpkg -i minikube_latest_amd64.deb

Kubectl installation

curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl version --client


minikube start --nodes 2 -p local-cluster --driver=docker --force
minikube status -p local-cluster

kubectl get nodes
kubectl get pods
kubectl config get-contexts

minikube node add --worker -p local-cluster

minikube node delete local-cluster-m03 -p local-cluster

minikube dashboard --url -p local-cluster

Pods:

apiVersion: v1
kind: Pod
metadata:
   name: nginx-pod1
   labels:
     team: development
     app: nginx1
spec:
   containers:
    - name: nginx-container
      image: nginx:latest
      ports:
        - containerPort: 80

kubectl run nginx-pod --image=nginx

kubectl get pods -l team=integration

kubectl get pod nginx-pod1 -o wide

Need to interactive with pod using below command

kubectl exec -it nginx-pod1 -- bash

kubectl port-forward nginx-pod1 8083:80

kubectl logs nginx-pod1 

yaml file related pod will delete using below command

kubectl delete -f nginx-pod.yaml

without yaml file need to delete the below command

kubectl delete pod nginx-pod 

Replicasets and deployment:

Replicaset:

kubectl api-resources | grep replicaset

sample file 

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: postgresq-replicaset
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      name: postgresql-pod
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql-container
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: P@ssw0rd

List out the replicaset

#kubectl get rs

Rolled out and Roll back

kubectl delete all --all

kubectl get po --show-labels

deployment file 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresq-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      name: postgresql-pod
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql-container
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: P@ssw0rd

kubectl scale --replicas=4 deployment/nginx-deployment

kubectl rollout history deployment/nginx-deployment

add annotations in deployment file for change cause


apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresq-deployment
  annotations:
     kubernetes.io/change-cause: "update the version from latest to 1.26 for downgrade the application"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      name: postgresql-pod
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql-container
          image: postgres:15.9
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: P@ssw0rd

how to rollout to previous version

kubectl rollout history deployment/nginx-deployment
kubectl rollout undo deployment/nginx-deployment --to-revision=5

kubectl rollout status deployment/nginx-deployment

Services:

kubectl get endpoints


apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
     app: nginx
  ports:
     - port: 8082
       targetPort: 80
       nodePort: 30000


ingress:

Path based routing

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress-path-based
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: nginx-demo.com
      http:
        paths:
         - path: /(.*)
           pathType: Prefix
           backend:
             service:
               name: nginx-service (mentioned servicename)
               port:
                 number: 8082
          - path: /api/(.*)
           pathType: Prefix
           backend:
             service:
               name: nginx-api-service (mentioned servicename)
               port:
                 number: 3001

host based routing

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress-host-based
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: nginx-demo.com
      http:
        paths:
         - path: /
           pathType: Prefix
           backend:
             service:
               name: nginx-service (mentioned servicename)
               port:
                 number: 8082
     - host: nginx-api-demo.com
       http:
       paths:
          - path: /
           pathType: Prefix
           backend:
             service:
               name: nginx-api-service (mentioned servicename)
               port:
                 number: 3001